with first_payments as (
    select  user_id
           ,date_trunc('day',min(transaction_datetime)) as first_payment_date
    from skyeng_db.payments
    where status_name='success'
    group by user_id
    ),
all_dates as (
    select distinct class_start_datetime::date as dt
    from skyeng_db.classes
    where extract(year from class_start_datetime)=2016
    ),
all_dates_by_user as (
    select  fp.user_id
           ,ad.dt 
    from first_payments fp
        join all_dates ad
            on ad.dt >= fp.first_payment_date
    ),
payments_by_dates as (
    select  user_id
           ,date(transaction_datetime) as payment_date
           ,sum(classes) as transaction_balance_change
    from skyeng_db.payments
    where status_name='success'
    group by user_id, date(transaction_datetime)
    ),
payments_by_dates_cumsum as (
    select  a.user_id
           ,a.dt
           ,b.transaction_balance_change
           ,sum(coalesce(b.transaction_balance_change,0)) over (partition by a.user_id order by dt rows between unbounded preceding and current row) as transaction_balance_change_cs
    from all_dates_by_user a
        left join payments_by_dates b
                on a.user_id=b.user_id and a.dt=b.payment_date
    ),
classes_by_dates as (
    select  user_id
           ,class_start_datetime::date as class_date
           ,count(id_class)*-1 as classes
    from skyeng_db.classes
    where class_status in ('success','failed_by_student') and class_type != 'trial'
    group by user_id,class_date
    ),
classes_by_dates_dates_cumsum as (
    select  a.user_id
           ,dt
           ,classes
           ,sum(coalesce(classes,0)) over (partition by a.user_id order by dt rows between unbounded preceding and current row) as classes_cs
    from all_dates_by_user a
        left join classes_by_dates b
            on a.user_id=b.user_id and a.dt=b.class_date
    ),
balances as (
    select  p.user_id
           ,p.dt
           ,transaction_balance_change
           ,transaction_balance_change_cs
           ,classes
           ,classes_cs
           ,classes_cs+transaction_balance_change_cs as balance
    from payments_by_dates_cumsum p
        join classes_by_dates_dates_cumsum c
            on p.user_id=c.user_id and p.dt=c.dt
    )
select 
       dt 
      ,sum(transaction_balance_change) as sum_balance_change
      ,sum(transaction_balance_change_cs) as sum_balance_change_cs
      ,sum(classes) as sum_classes
      ,sum(classes_cs) as sum_classes_cs
      ,sum(balance) as sum_balance
from balances
group by dt
order by dt
limit 1000
